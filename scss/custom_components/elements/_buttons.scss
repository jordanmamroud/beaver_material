

// Raised Button
.lb-btn {
    .fl-button , .pp-button ,  .pp-more-link-button{
          text-decoration: none;
          text-align: center;
          border-radius: $border-radius !important;
          letter-spacing: .5px;
          @extend .z-depth-2;
          transition: .2s ease-out;
          cursor: pointer;

          &:hover {
            @extend .hoverable;
          }
    }
}

/************ mixin for different colored buttons ********************/
@mixin addButtonStyle( $background, $textColor   ){
  border: none !important;
  background-color:  $background !important; 
  color: $textColor !important; 
  
  &:hover {
        @include transition-bg-change( lighten($background , 10%) );
  
  }
  & span,i  {
    color: $textColor !important ;
  }
}

.lb-btn-primary {
    .fl-button,   .pp-button,  .pp-more-link-button {
            @include addButtonStyle( $primary-color, $primary-text );
    }
}

.lb-btn-accent {
    .fl-button,   .pp-button,  .pp-more-link-button {
        @include addButtonStyle( $accent-color, $accent-text );
    }
}

.lb-btn-light {
    .fl-button, .lb-btn-accent .pp-button, .pp-more-link-button {
      // using light bgheadertext temporarily just doing to match but if want more control 
      //create separate variable.
      @include addButtonStyle( $light-bg, $light-bg-header-text)
    } 
}

@mixin makeButtonHolo($border-color, $text-color, $hover-bg-color, $hover-text-color){
    border: 1px solid $border-color !important;
    color: $text-color !important; 
    background-color: $transparent-color !important;
    
    &:hover {
      @include transition-bg-change($hover-bg-color);
      color: $hover-text-color !important; 
        
        span, i {
            color: $hover-text-color !important; 
        } 
    }
    & span, i {color: $text-color !important; }
}

 
.lb-btn-holo-accent {
    .fl-button , .pp-button, ,  .pp-more-link-button{
        @include makeButtonHolo($accent-color, $accent-color,$accent-color,$accent-text)
    }
}

.lb-btn-holo-white {
    .fl-button , .pp-button,  .pp-more-link-button{
        @include makeButtonHolo($white, $white, $white , $accent-color)
    }
}


@mixin addButtonAlignment( $position){
    @media only screen and (min-width: 500px) {
        .fl-button-wrap {
            text-align: $position !important ; 
        }
    }
    @media only screen and (max-width: 500px) {
       .fl-button-wrap{
         text-align: center !important ; 
    }
  }
}

 .lb-btn-right .fl-button-wrap{
   text-align: right !important ; 
 }

@mixin sizeButton($btn-width, $padding){
    width: $btn-width ;
    padding: $padding 0px $padding 0px ;
}

.lb-btn-small{
    .fl-button, .pp-button,  .pp-more-link-button {
        @include sizeButton($button-small-width, $button-small-padding);
    }
}

.lb-btn-medium{
    .fl-button, .pp-button,  .pp-more-link-button {
        @include sizeButton($button-medium-width,  $button-medium-padding);
    }
}

.lb-btn-large {
    .fl-button, .pp-button,  .pp-more-link-button{
        @include sizeButton($button-large-width,  $button-large-padding);
    }
}
  
 
// // Flat button
// .btn-flat {
//   box-shadow: none;
//   background-color: transparent;
//   color: $button-flat-color;
//   cursor: pointer;
//   transition: background-color .2s;

//   &:focus,
//   &:hover {
//     box-shadow: none;
//   }

//   &:focus {
//     background-color: rgba(0,0,0,.1);
//   }

//   &.disabled {
//     background-color: transparent !important;
//     color: $button-flat-disabled-color !important;
//     cursor: default;
//   }
// }

// // Large button
// .btn-large {
//   @extend .btn;
//   height: $button-large-height;
//   line-height: $button-large-height;

//   i {
//     font-size: $button-large-icon-font-size;
//   }
// }

// // Block button
// .btn-block {
//   display: block;
// }
